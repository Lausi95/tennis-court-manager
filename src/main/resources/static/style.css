/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-bold: 700;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .relative {
    position: relative;
  }
  .z-50 {
    z-index: 50;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .row-span-1 {
    grid-row: span 1 / span 1;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .row-span-4 {
    grid-row: span 4 / span 4;
  }
  .row-span-5 {
    grid-row: span 5 / span 5;
  }
  .row-span-6 {
    grid-row: span 6 / span 6;
  }
  .row-span-7 {
    grid-row: span 7 / span 7;
  }
  .row-span-8 {
    grid-row: span 8 / span 8;
  }
  .row-span-9 {
    grid-row: span 9 / span 9;
  }
  .row-span-10 {
    grid-row: span 10 / span 10;
  }
  .row-span-11 {
    grid-row: span 11 / span 11;
  }
  .row-span-12 {
    grid-row: span 12 / span 12;
  }
  .row-span-13 {
    grid-row: span 13 / span 13;
  }
  .row-span-14 {
    grid-row: span 14 / span 14;
  }
  .row-span-15 {
    grid-row: span 15 / span 15;
  }
  .row-span-16 {
    grid-row: span 16 / span 16;
  }
  .row-span-17 {
    grid-row: span 17 / span 17;
  }
  .row-span-18 {
    grid-row: span 18 / span 18;
  }
  .row-span-19 {
    grid-row: span 19 / span 19;
  }
  .row-span-20 {
    grid-row: span 20 / span 20;
  }
  .row-span-21 {
    grid-row: span 21 / span 21;
  }
  .row-span-22 {
    grid-row: span 22 / span 22;
  }
  .row-span-23 {
    grid-row: span 23 / span 23;
  }
  .row-span-24 {
    grid-row: span 24 / span 24;
  }
  .row-span-25 {
    grid-row: span 25 / span 25;
  }
  .row-span-26 {
    grid-row: span 26 / span 26;
  }
  .row-span-27 {
    grid-row: span 27 / span 27;
  }
  .row-span-28 {
    grid-row: span 28 / span 28;
  }
  .row-span-29 {
    grid-row: span 29 / span 29;
  }
  .row-span-30 {
    grid-row: span 30 / span 30;
  }
  .row-span-31 {
    grid-row: span 31 / span 31;
  }
  .row-span-32 {
    grid-row: span 32 / span 32;
  }
  .row-span-33 {
    grid-row: span 33 / span 33;
  }
  .row-span-34 {
    grid-row: span 34 / span 34;
  }
  .row-span-35 {
    grid-row: span 35 / span 35;
  }
  .row-span-36 {
    grid-row: span 36 / span 36;
  }
  .row-span-37 {
    grid-row: span 37 / span 37;
  }
  .row-span-38 {
    grid-row: span 38 / span 38;
  }
  .row-span-39 {
    grid-row: span 39 / span 39;
  }
  .row-span-40 {
    grid-row: span 40 / span 40;
  }
  .row-span-41 {
    grid-row: span 41 / span 41;
  }
  .row-span-42 {
    grid-row: span 42 / span 42;
  }
  .row-span-43 {
    grid-row: span 43 / span 43;
  }
  .row-span-44 {
    grid-row: span 44 / span 44;
  }
  .row-span-45 {
    grid-row: span 45 / span 45;
  }
  .row-span-46 {
    grid-row: span 46 / span 46;
  }
  .row-span-47 {
    grid-row: span 47 / span 47;
  }
  .row-span-48 {
    grid-row: span 48 / span 48;
  }
  .row-span-49 {
    grid-row: span 49 / span 49;
  }
  .row-span-50 {
    grid-row: span 50 / span 50;
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .table {
    display: table;
  }
  .h-\[30px\] {
    height: 30px;
  }
  .w-full {
    width: 100%;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-flow-col {
    grid-auto-flow: column;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-30 {
    grid-template-rows: repeat(30, minmax(0, 1fr));
  }
  .grid-rows-31 {
    grid-template-rows: repeat(31, minmax(0, 1fr));
  }
  .grid-rows-32 {
    grid-template-rows: repeat(32, minmax(0, 1fr));
  }
  .grid-rows-33 {
    grid-template-rows: repeat(33, minmax(0, 1fr));
  }
  .grid-rows-34 {
    grid-template-rows: repeat(34, minmax(0, 1fr));
  }
  .grid-rows-35 {
    grid-template-rows: repeat(35, minmax(0, 1fr));
  }
  .grid-rows-36 {
    grid-template-rows: repeat(36, minmax(0, 1fr));
  }
  .grid-rows-37 {
    grid-template-rows: repeat(37, minmax(0, 1fr));
  }
  .grid-rows-38 {
    grid-template-rows: repeat(38, minmax(0, 1fr));
  }
  .grid-rows-39 {
    grid-template-rows: repeat(39, minmax(0, 1fr));
  }
  .grid-rows-40 {
    grid-template-rows: repeat(40, minmax(0, 1fr));
  }
  .grid-rows-41 {
    grid-template-rows: repeat(41, minmax(0, 1fr));
  }
  .grid-rows-42 {
    grid-template-rows: repeat(42, minmax(0, 1fr));
  }
  .grid-rows-43 {
    grid-template-rows: repeat(43, minmax(0, 1fr));
  }
  .grid-rows-44 {
    grid-template-rows: repeat(44, minmax(0, 1fr));
  }
  .grid-rows-45 {
    grid-template-rows: repeat(45, minmax(0, 1fr));
  }
  .grid-rows-46 {
    grid-template-rows: repeat(46, minmax(0, 1fr));
  }
  .grid-rows-47 {
    grid-template-rows: repeat(47, minmax(0, 1fr));
  }
  .grid-rows-48 {
    grid-template-rows: repeat(48, minmax(0, 1fr));
  }
  .grid-rows-49 {
    grid-template-rows: repeat(49, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-blue-300 {
    border-color: var(--color-blue-300);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-500 {
    border-color: var(--color-gray-500);
  }
  .border-green-300 {
    border-color: var(--color-green-300);
  }
  .border-orange-300 {
    border-color: var(--color-orange-300);
  }
  .border-purple-300 {
    border-color: var(--color-purple-300);
  }
  .border-red-300 {
    border-color: var(--color-red-300);
  }
  .border-yellow-300 {
    border-color: var(--color-yellow-300);
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-200 {
    background-color: var(--color-blue-200);
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-blue-900 {
    background-color: var(--color-blue-900);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-green-200 {
    background-color: var(--color-green-200);
  }
  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }
  .bg-orange-200 {
    background-color: var(--color-orange-200);
  }
  .bg-orange-300 {
    background-color: var(--color-orange-300);
  }
  .bg-orange-900 {
    background-color: var(--color-orange-900);
  }
  .bg-purple-200 {
    background-color: var(--color-purple-200);
  }
  .bg-red-200 {
    background-color: var(--color-red-200);
  }
  .bg-red-300 {
    background-color: var(--color-red-300);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-yellow-200 {
    background-color: var(--color-yellow-200);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .align-middle {
    vertical-align: middle;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-red-900 {
    color: var(--color-red-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400);
      }
    }
  }
  .hover\:bg-orange-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-400);
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
}
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
* {
  font-family: "Roboto", sans-serif;
}
.grid-rows-30 {
  grid-template-rows: repeat(30, minmax(0, 1fr));
}
.grid-rows-31 {
  grid-template-rows: repeat(31, minmax(0, 1fr));
}
.grid-rows-32 {
  grid-template-rows: repeat(32, minmax(0, 1fr));
}
.grid-rows-33 {
  grid-template-rows: repeat(33, minmax(0, 1fr));
}
.grid-rows-34 {
  grid-template-rows: repeat(34, minmax(0, 1fr));
}
.grid-rows-35 {
  grid-template-rows: repeat(35, minmax(0, 1fr));
}
.grid-rows-36 {
  grid-template-rows: repeat(36, minmax(0, 1fr));
}
.grid-rows-37 {
  grid-template-rows: repeat(37, minmax(0, 1fr));
}
.grid-rows-38 {
  grid-template-rows: repeat(38, minmax(0, 1fr));
}
.grid-rows-39 {
  grid-template-rows: repeat(39, minmax(0, 1fr));
}
.grid-rows-40 {
  grid-template-rows: repeat(40, minmax(0, 1fr));
}
.grid-rows-41 {
  grid-template-rows: repeat(41, minmax(0, 1fr));
}
.grid-rows-42 {
  grid-template-rows: repeat(42, minmax(0, 1fr));
}
.grid-rows-43 {
  grid-template-rows: repeat(43, minmax(0, 1fr));
}
.grid-rows-44 {
  grid-template-rows: repeat(44, minmax(0, 1fr));
}
.grid-rows-45 {
  grid-template-rows: repeat(45, minmax(0, 1fr));
}
.grid-rows-46 {
  grid-template-rows: repeat(46, minmax(0, 1fr));
}
.grid-rows-47 {
  grid-template-rows: repeat(47, minmax(0, 1fr));
}
.grid-rows-48 {
  grid-template-rows: repeat(48, minmax(0, 1fr));
}
.grid-rows-49 {
  grid-template-rows: repeat(49, minmax(0, 1fr));
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
